name: CSharpier

on:
  workflow_dispatch:
    inputs:
      owner:
        description: "The owner of the repository"
        required: true
      repository:
        description: "The repository name"
        required: true
      branch:
        description: "The branch to revert on"
        required: true
      pull_request:
        description: "PR number (for comment feedback)"
        required: true
      installationId:
        description: "GitHub App installation ID"
        required: true
      checkRunId:
        description: "Check run ID"
        required: true

permissions:
  contents: read
  pull-requests: write
  checks: write

env:
  GHA_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

jobs:
  csharpier:
    runs-on: ubuntu-latest
    steps:
      - name: Generate a token
        id: generate_token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          installation_retrieval_mode: id
          installation_retrieval_payload: ${{ github.event.inputs.installationId }}

      - name: Mark check run as in_progress
        uses: LouisBrunner/checks-action@v2.0.0
        with:
          token: ${{ steps.generate_token.outputs.token }}
          repo: ${{ github.event.inputs.owner }}/${{ github.event.inputs.repository }}
          check_id: ${{ github.event.inputs.checkRunId }}
          status: in_progress
          details_url: ${{ env.GHA_URL }}
          output: |
            {"title": "Workflow started üèÉüèª‚Äç‚û°Ô∏è", "summary": "See details in the workflow run."}

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: "${{ github.event.inputs.owner}}/${{ github.event.inputs.repository }}"
          ref: ${{ github.event.inputs.branch }}
          token: ${{ steps.generate_token.outputs.token }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Check if CSharpier is installed
        run: |
          echo "CSharpierInstalled=false" >> $GITHUB_ENV
          if test -f ".config/dotnet-tools.json"; then
            if jq -e '.tools | has("csharpier")' .config/dotnet-tools.json > /dev/null; then
              echo "CSharpierInstalled=true" >> $GITHUB_ENV
            fi
          fi

      - name: Install CSharpier if missing
        if: ${{ env.CSharpierInstalled == 'false' }}
        run: |
          if ! test -f ".config/dotnet-tools.json"; then
            dotnet new tool-manifest
          fi
          dotnet tool install csharpier

      - name: Fix legacy dotnet-csharpier reference
        if: ${{ env.CSharpierInstalled == 'true' }}
        run: |
          echo "Checking for legacy 'dotnet-csharpier' command..."
          if grep -q '"dotnet-csharpier"' .config/dotnet-tools.json; then
            echo "Found legacy command. Replacing with 'csharpier'..."
            sed -i 's/"dotnet-csharpier"/"csharpier"/g' .config/dotnet-tools.json
          else
            echo "No legacy command found."
          fi

      - name: Dotnet restore and update
        if: ${{ env.CSharpierInstalled == 'true' }}
        run: |
          dotnet tool restore
          dotnet tool update csharpier

      - name: CSharpier format check
        continue-on-error: true
        run: |
          set -e
          dotnet csharpier check . >> csharpier.log 2>&1

      - name: Read csharpier.log
        uses: guibranco/github-file-reader-action-v2@v2.2.796
        id: log
        with:
          path: csharpier.log

      - name: Delete csharpier.log
        run: rm csharpier.log 2> /dev/null

      - name: Update PR with comment (issues found)
        uses: mshick/add-pr-comment@v2
        if: ${{ steps.log.outputs.contents != '' }}
        with:
          repo-token: ${{ steps.generate_token.outputs.token }}
          repo-owner: ${{ github.event.inputs.owner }}
          repo-name: ${{ github.event.inputs.repository }}
          issue: ${{ github.event.inputs.pull_request }}
          refresh-message-position: true
          allow-repeats: true
          message: |
            :white_check_mark: [CSharpier](${{ env.GHA_URL }}) result:

            ```
            ${{ steps.log.outputs.contents }}
            ```

      - name: Update PR with comment (no issues)
        uses: mshick/add-pr-comment@v2
        if: ${{ steps.log.outputs.contents == '' }}
        with:
          repo-token: ${{ steps.generate_token.outputs.token }}
          repo-owner: ${{ github.event.inputs.owner }}
          repo-name: ${{ github.event.inputs.repository }}
          issue: ${{ github.event.inputs.pull_request }}
          refresh-message-position: true
          allow-repeats: true
          message: |
            :warning: [CSharpier](${{ env.GHA_URL }}) executed! There's no need for any changes.

      - name: CSharpier format
        run: dotnet csharpier format .

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v20
        id: verify-changed-files

      - name: Config git
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "150967461+gstraccini[bot]@users.noreply.github.com"
          git config --local user.name "gstraccini[bot]"
          git config --global --add --bool push.autoSetupRemote true

      - name: Commit files
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git add .
          git commit -m "CSharpier format"
          echo "sha1=$(git rev-parse HEAD)" >> $GITHUB_ENV
          git push origin ${{ github.event.inputs.branch }}

      - name: Mark check run as success
        if: success()
        uses: LouisBrunner/checks-action@v2.0.0
        with:
          token: ${{ steps.generate_token.outputs.token }}
          repo: ${{ github.event.inputs.owner }}/${{ github.event.inputs.repository }}
          check_id: ${{ github.event.inputs.checkRunId }}
          conclusion: success
          details_url: ${{ env.GHA_URL }}
          output: |
            {"title": "Workflow passed ‚úÖ", "summary": "See details in the workflow run."}

      - name: Update PR with comment (failed)
        uses: mshick/add-pr-comment@v2
        if: ${{ failure() }}
        with:
          repo-token: ${{ steps.generate_token.outputs.token }}
          repo-owner: ${{ github.event.inputs.owner }}
          repo-name: ${{ github.event.inputs.repository }}
          issue: ${{ github.event.inputs.pull_request }}
          refresh-message-position: true
          allow-repeats: true
          message: |
            :x: [CSharpier](${{ env.GHA_URL }}) failed!

      - name: Mark check run as failure
        if: failure()
        uses: LouisBrunner/checks-action@v2.0.0
        with:
          token: ${{ steps.generate_token.outputs.token }}
          repo: ${{ github.event.inputs.owner }}/${{ github.event.inputs.repository }}
          check_id: ${{ github.event.inputs.checkRunId }}
          conclusion: failure
          details_url: ${{ env.GHA_URL }}
          output: |
            {"title": "Workflow failed ‚ùå", "summary": "See details in the workflow run."}
